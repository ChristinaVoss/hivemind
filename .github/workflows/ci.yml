name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  brakeman:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  rubocop:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  rspec:
    runs-on: ubuntu-latest

    env:
      # The test database name should match the one in config/database.yml
      POSTGRES_DB: hivemind_test
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST: postgres
      RAILS_ENV: test
    container:
      image:  ${{ inputs.docker_image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    services:
      postgres:
        image: 'postgis/postgis:15-3.3-alpine'
        env:
          POSTGRES_DB: hiveming_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - '5432:5432'
        options: >-
          --health-cmd "pg_isready -h 127.0.0.1"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: /app
    steps:
      - name: Copy .env file
        run: cp .env.example .env

      - name: Set up database
        run: |
          rails db:create
          rails db:migrate

      - name: Run rspec
        run: rspec

      - name: Archive coverage
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: /app/coverage/
          include-hidden-files: true